// ~/buzzaraunt/frontend/postcss.config.js
// Use ES Module syntax
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  }
};
@tailwind base;
@tailwind components;
@tailwind utilities;
*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
}/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
  --tw-content: '';
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
Add the correct text decoration in Chrome, Edge, and Safari.
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
Remove the default font size and weight for headings.
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
Reset links to optimize for opt-in styling instead of opt-out.
a {
  color: inherit;
  text-decoration: inherit;
Add the correct font weight in Edge and Safari.
b,
strong {
  font-weight: bolder;
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
Add the correct font size in all browsers.
small {
  font-size: 80%;
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
sub {
  bottom: -0.25em;
  top: -0.5em;
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
Remove the inheritance of text transform in Edge and Firefox.
select {
  text-transform: none;
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
Use the modern Firefox focus style for all focusable elements.
:-moz-focusring {
  outline: auto;
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
:-moz-ui-invalid {
  box-shadow: none;
Add the correct vertical alignment in Chrome and Firefox.
progress {
Correct the cursor style of increment and decrement buttons in Safari.
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
Remove the inner padding in Chrome and Safari on macOS.
::-webkit-search-decoration {
  -webkit-appearance: none;
2. Change font properties to `inherit` in Safari.
::-webkit-file-upload-button {
  font: inherit; /* 2 */
Add the correct display in Chrome and Safari.
summary {
  display: list-item;
Removes the default spacing and border for appropriate elements.
blockquote,
dl,
dd,
h6,
hr,
figure,
p,
  margin: 0;
fieldset {
  padding: 0;
legend {
ol,
ul,
menu {
  list-style: none;
Reset default styling for dialogs.
dialog {
Prevent resizing textareas horizontally by default.
  resize: vertical;
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
input::placeholder,
textarea::placeholder {
Set the default cursor for buttons.
[role="button"] {
  cursor: pointer;
Make sure disabled buttons don't get the pointer cursor.
:disabled {
  cursor: default;
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
video {
  max-width: 100%;
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden]:where(:not([hidden="until-found"])) {
  display: none;
.container {
  width: 100%;
@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
@media (min-width: 768px) {
    max-width: 768px;
@media (min-width: 1024px) {
    max-width: 1024px;
@media (min-width: 1280px) {
    max-width: 1280px;
@media (min-width: 1536px) {
    max-width: 1536px;
.col-span-2 {
  grid-column: span 2 / span 2;
.mx-auto {
  margin-left: auto;
  margin-right: auto;
.mb-1 {
  margin-bottom: 0.25rem;
.mb-10 {
  margin-bottom: 2.5rem;
.mb-12 {
  margin-bottom: 3rem;
.mb-2 {
  margin-bottom: 0.5rem;
.mb-4 {
  margin-bottom: 1rem;
.mb-6 {
  margin-bottom: 1.5rem;
.mb-8 {
  margin-bottom: 2rem;
.mt-10 {
  margin-top: 2.5rem;
.mt-2 {
  margin-top: 0.5rem;
.mt-4 {
  margin-top: 1rem;
.mt-6 {
  margin-top: 1.5rem;
.mt-8 {
  margin-top: 2rem;
.block {
  display: block;
.inline-block {
  display: inline-block;
.flex {
  display: flex;
.grid {
  display: grid;
.hidden {
.h-40 {
  height: 10rem;
.max-h-24 {
  max-height: 6rem;
.min-h-screen {
  min-height: 100vh;
.w-40 {
  width: 10rem;
.w-full {
.max-w-2xl {
  max-width: 42rem;
.max-w-3xl {
  max-width: 48rem;
.max-w-4xl {
  max-width: 56rem;
.max-w-6xl {
  max-width: 72rem;
.max-w-md {
  max-width: 28rem;
.max-w-sm {
  max-width: 24rem;
.max-w-xl {
  max-width: 36rem;
.flex-1 {
  flex: 1 1 0%;
.grow {
  flex-grow: 1;
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
.flex-col {
  flex-direction: column;
.items-center {
  align-items: center;
.justify-center {
  justify-content: center;
.justify-between {
  justify-content: space-between;
.gap-10 {
  gap: 2.5rem;
.gap-4 {
  gap: 1rem;
.gap-6 {
  gap: 1.5rem;
.gap-8 {
  gap: 2rem;
.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
.whitespace-pre-wrap {
  white-space: pre-wrap;
.rounded {
  border-radius: 0.25rem;
.rounded-2xl {
  border-radius: 1rem;
.rounded-lg {
  border-radius: 0.5rem;
.rounded-xl {
  border-radius: 0.75rem;
.border {
  border-width: 1px;
.border-4 {
  border-width: 4px;
.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
.border-white {
  border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
.bg-blue-100 {
  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));
.bg-blue-600 {
  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));
.bg-gray-100 {
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
.bg-gray-50 {
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
.bg-green-100 {
  background-color: rgb(220 252 231 / var(--tw-bg-opacity, 1));
.bg-green-500 {
  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));
.bg-purple-100 {
  background-color: rgb(243 232 255 / var(--tw-bg-opacity, 1));
.bg-red-500 {
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
.bg-white {
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
.bg-yellow-100 {
  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));
.bg-yellow-400 {
  background-color: rgb(250 204 21 / var(--tw-bg-opacity, 1));
.bg-yellow-500 {
  background-color: rgb(234 179 8 / var(--tw-bg-opacity, 1));
.bg-opacity-90 {
  --tw-bg-opacity: 0.9;
.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
.p-2 {
  padding: 0.5rem;
.p-3 {
  padding: 0.75rem;
.p-4 {
  padding: 1rem;
.p-6 {
  padding: 1.5rem;
.p-8 {
  padding: 2rem;
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
.py-20 {
  padding-top: 5rem;
  padding-bottom: 5rem;
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
.text-left {
  text-align: left;
.text-center {
  text-align: center;
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
.text-5xl {
  font-size: 3rem;
  line-height: 1;
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
.text-xl {
  font-size: 1.25rem;
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
.font-bold {
  font-weight: 700;
.font-extrabold {
  font-weight: 800;
.font-medium {
  font-weight: 500;
.font-semibold {
  font-weight: 600;
.leading-tight {
  line-height: 1.25;
.tracking-wide {
  letter-spacing: 0.025em;
.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity, 1));
.text-blue-600 {
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
.text-gray-500 {
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
.text-gray-600 {
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
.text-gray-700 {
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
.text-gray-800 {
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
.text-gray-900 {
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
.text-green-600 {
  color: rgb(22 163 74 / var(--tw-text-opacity, 1));
.text-purple-700 {
  color: rgb(126 34 206 / var(--tw-text-opacity, 1));
.text-red-500 {
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
.text-white {
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
.text-yellow-600 {
  color: rgb(202 138 4 / var(--tw-text-opacity, 1));
.text-yellow-700 {
  color: rgb(161 98 7 / var(--tw-text-opacity, 1));
.underline {
  text-decoration-line: underline;
.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
.backdrop-blur-md {
  --tw-backdrop-blur: blur(12px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
.backdrop-filter {
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
.hover\:bg-blue-200:hover {
  background-color: rgb(191 219 254 / var(--tw-bg-opacity, 1));
.hover\:bg-blue-700:hover {
  background-color: rgb(29 78 216 / var(--tw-bg-opacity, 1));
.hover\:bg-gray-900:hover {
  background-color: rgb(17 24 39 / var(--tw-bg-opacity, 1));
.hover\:bg-green-200:hover {
  background-color: rgb(187 247 208 / var(--tw-bg-opacity, 1));
.hover\:bg-green-600:hover {
  background-color: rgb(22 163 74 / var(--tw-bg-opacity, 1));
.hover\:bg-purple-200:hover {
  background-color: rgb(233 213 255 / var(--tw-bg-opacity, 1));
.hover\:bg-red-600:hover {
  background-color: rgb(220 38 38 / var(--tw-bg-opacity, 1));
.hover\:bg-yellow-200:hover {
  background-color: rgb(254 240 138 / var(--tw-bg-opacity, 1));
.hover\:bg-yellow-300:hover {
  background-color: rgb(253 224 71 / var(--tw-bg-opacity, 1));
.hover\:bg-yellow-600:hover {
  background-color: rgb(202 138 4 / var(--tw-bg-opacity, 1));
.hover\:text-yellow-800:hover {
  color: rgb(133 77 14 / var(--tw-text-opacity, 1));
.hover\:underline:hover {
.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
.focus\:ring-yellow-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(234 179 8 / var(--tw-ring-opacity, 1));
  .sm\:flex-row {
    flex-direction: row;
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  .md\:flex-row {
@tailwind base;
@tailwind components;
@tailwind utilities;
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{html,js,jsx,ts,tsx}",
    "./public/**/*.html",
    "./**/*.html"
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
<!DOCTYPE html>
<html lang="en">
<head>
<!-- SEO Meta Tags -->

<meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
<meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
<meta name="author" content="Buzzaraunt AI" />
<!-- Open Graph / Facebook -->
<meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
<meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
<meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
<meta property="og:url" content="https://buzzaraunt.com" />
<meta property="og:type" content="website" />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
<meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
<meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
<!-- Favicon -->
<link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Checkout – Buzzaraunt</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
<link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-gray-100 text-gray-900">
  <div class="max-w-2xl mx-auto p-6">
    <h1 class="text-2xl font-bold text-yellow-600 mb-4">🧾 Complete Your Order</h1>
    <!-- Cart Summary -->
    <div class="bg-white p-4 rounded shadow mb-6">
      <h2 class="text-xl font-semibold mb-2">Your Items</h2>
      <ul id="cartSummary" class="text-sm space-y-1"></ul>
      <p id="cartTotal" class="font-semibold mt-2"></p>
    </div>
    <!-- Checkout Form -->
    <form id="checkoutForm" class="space-y-4">
      <div>
        <label class="block font-medium">Full Name</label>
        <input type="text" name="name" required class="w-full p-2 border rounded" />
      </div>
        <label class="block font-medium">Phone</label>
        <input type="tel" name="phone" required class="w-full p-2 border rounded" />
        <label class="block font-medium">Email</label>
        <input type="email" name="email" required class="w-full p-2 border rounded" />
        <label class="block font-medium">Delivery or Pickup?</label>
        <select name="method" class="w-full p-2 border rounded">
          <option value="pickup">Pickup</option>
          <option value="delivery">Delivery</option>
        </select>
      <div id="deliveryAddressDiv" style="display:none">
        <label class="block font-medium">Delivery Address</label>
        <textarea name="address" rows="2" class="w-full p-2 border rounded"></textarea>
      <h3 class="font-semibold mt-6 mb-2">💳 Payment</h3>
      <div class="flex gap-4">
        <button type="button" onclick="payWithStripe()" class="bg-blue-600 text-white px-4 py-2 rounded">Pay with Stripe</button>
        <button type="button" onclick="payWithPayPal()" class="bg-yellow-500 text-white px-4 py-2 rounded">Pay with PayPal</button>
    </form>
  </div>
  <script>
    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
    const urlParams = new URLSearchParams(window.location.search);
    const restaurantId = urlParams.get('rid');
    const cartSummaryEl = document.getElementById('cartSummary');
    const cartTotalEl = document.getElementById('cartTotal');
    const deliveryAddressDiv = document.getElementById('deliveryAddressDiv');
    let total = 0;
    cart.forEach(item => {
      const li = document.createElement('li');
      li.textContent = item.item + " - " + item.price;
      cartSummaryEl.appendChild(li);
      total += parseFloat(item.price.replace('$','')) || 0;
    });
    cartTotalEl.textContent = "Total: $" + total.toFixed(2);
    const checkoutForm = document.getElementById('checkoutForm');
    checkoutForm.method.addEventListener('change', () => {
      deliveryAddressDiv.style.display = checkoutForm.method.value === 'delivery' ? 'block' : 'none';
    function payWithStripe() {
      const data = collectOrderData();
      alert('Stripe payment would start here (demo).');
      console.log('Stripe payload:', data);
      // TODO: Call backend to create Stripe checkout session
    }
    function payWithPayPal() {
      alert('PayPal payment would start here (demo).');
      console.log('PayPal payload:', data);
      // TODO: Redirect to PayPal or call PayPal SDK
    function collectOrderData() {
      const form = new FormData(checkoutForm);
      return {
        restaurantId,
        cart,
        total: total.toFixed(2),
        name: form.get('name'),
        phone: form.get('phone'),
        email: form.get('email'),
        method: form.get('method'),
        address: form.get('address') || ''
      };
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
  <meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
  <meta name="author" content="Buzzaraunt AI" />

  <meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
  <meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
  <meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
  <meta property="og:url" content="https://buzzaraunt.com" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
  <meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
  <meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
  <link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Buzzaraunt Dashboard</title>
  <link rel="preload" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'"><noscript><link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"></noscript>
  <link rel="stylesheet" href="/src/styles/styles.css" /> </head>
<body class="bg-gray-50 text-gray-900">
  <script>
    const token = localStorage.getItem("token");
    const userString = localStorage.getItem("user");
    let user = null;
    let userPlan = null; // Renamed to avoid conflict with 'plan' variable in feature checks
    // Safely parse user data from localStorage
    if (userString) {
      try {
        user = JSON.parse(userString);
        userPlan = user.plan;
      } catch (e) {
        console.error("Error parsing user data from localStorage:", e);
        // Clear corrupt data if parsing fails
        localStorage.removeItem("user");
      }
    }
    // 1. Check if user is logged in
    if (!token || !user) {
      alert("⚠️ You must be logged in to access this page.");
      window.location.href = "/login.html";
    // 2. Check if the user's plan is allowed for dashboard access
    // 'enterprise' plan from register.html maps to 'agency' in dashboard context for features
    const allowedDashboardPlans = ["basic", "pro", "enterprise"];
    if (!userPlan || !allowedDashboardPlans.includes(userPlan)) {
      alert("🚫 Access denied: Please subscribe to a valid plan to access the dashboard.");
      window.location.href = "pricing.html";
    // Comprehensive logout function
    function logout() {
      localStorage.removeItem("token");
      localStorage.removeItem("user");
      localStorage.removeItem("userId");
      localStorage.removeItem("restaurantId");
      alert("✅ Logged out successfully.");
      window.location.href = "/login.html"; // Redirect to login page
    // DOMContentLoaded ensures elements exist before trying to access them
    document.addEventListener("DOMContentLoaded", () => {
      // Display user email if available
      const userEmailSpan = document.getElementById("userEmail");
      if (userEmailSpan && user && user.email) {
        userEmailSpan.textContent = user.email;
      } else if (userEmailSpan) {
        userEmailSpan.textContent = "N/A";
      // --- Feature Access Control Logic ---
      const promoBtn = document.getElementById("promoBtn");
      const storeBtn = document.getElementById("storeBtn");
      const deliveryBtn = document.getElementById("deliveryBtn");
      // Function to check access and handle redirection
      // requiredPlan can be 'basic', 'pro', or 'enterprise'
      function handleFeatureClick(event, requiredPlan) {
        event.preventDefault(); // Prevent default link navigation
        let hasAccess = false;
        if (userPlan === "enterprise") {
          hasAccess = true;
        } else if (userPlan === "pro" && (requiredPlan === "basic" || requiredPlan === "pro")) {
        } else if (userPlan === "basic" && requiredPlan === "basic") {
        }
        if (hasAccess) {
          window.location.href = event.currentTarget.href; // Proceed to the page
        } else {
          alert(`🚫 To access this feature, please upgrade your plan to ${requiredPlan.charAt(0).toUpperCase() + requiredPlan.slice(1)} or higher.`);
          window.location.href = "/pricing.html"; // Redirect to pricing page
      // Attach event listeners to the buttons/links
      if (promoBtn) {
        promoBtn.addEventListener("click", (e) => handleFeatureClick(e, "pro")); // Generate Promo requires Pro
      if (storeBtn) {
        storeBtn.addEventListener("click", (e) => handleFeatureClick(e, "pro")); // Manage Store requires Pro
      if (deliveryBtn) {
        deliveryBtn.addEventListener("click", (e) => handleFeatureClick(e, "enterprise")); // Delivery requires Enterprise/Agency
      // For 'Scheduled Promos' (promos.html), it's generally tied to promo generation,
      // so we'll assume it also requires 'pro'.
      const scheduledPromosBtn = document.querySelector('a[href="promos.html"]');
      if (scheduledPromosBtn) {
        scheduledPromosBtn.addEventListener("click", (e) => handleFeatureClick(e, "pro"));
      // Add similar checks for any other links directly from dashboard if needed
    });
  </script>
  <div class="max-w-4xl mx-auto p-6">
    <h1 class="text-4xl font-bold text-yellow-600 mb-6">🍽️ Buzzaraunt Dashboard</h1>
    <p class="mb-4 text-gray-700">Welcome to your restaurant's control center. Use the tools below to grow your brand with AI promotions and scheduling.</p>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <a href="promo.html" id="promoBtn" class="block bg-yellow-100 hover:bg-yellow-200 rounded-lg p-6 shadow transition">
        <h2 class="text-2xl font-semibold mb-2">🎯 Generate Promo</h2>
        <p>Create viral posts with AI including voiceovers, captions, music, images and hashtags.</p>
      </a>
      <a href="promos.html" class="block bg-purple-100 hover:bg-purple-200 rounded-lg p-6 shadow transition">
        <h2 class="text-2xl font-semibold mb-2">📅 Scheduled Promos</h2>
        <p>Manage and schedule your upcoming social media content.</p>
      <a href="store.html" id="storeBtn" class="block bg-green-100 hover:bg-green-200 rounded-lg p-6 shadow transition">
        <h2 class="text-2xl font-semibold mb-2">🏪 Manage Store</h2>
        <p>Edit your menu, update prices, and manage ordering options.</p>
      <a href="delivery.html" id="deliveryBtn" class="block bg-blue-100 hover:bg-blue-200 rounded-lg p-6 shadow transition">
        <h2 class="text-2xl font-semibold mb-2">🚚 Delivery Orders</h2>
        <p>Track, fulfill, and manage incoming online orders in real time.</p>
    </div>
    <button onclick="logout()" class="mt-6 px-6 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition font-semibold">
      Logout
    </button>
  </div>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
<script>
  const plan = localStorage.getItem("userPlan");

  if (plan !== "agency") {
    alert("🚫 Delivery tools are only available to Agency plan members.");
    window.location.href = "pricing.html";
  }
const allowedPlans = ["basic", "pro", "enterprise"];
const plan = localStorage.getItem("buzz_plan");
if (!allowedPlans.includes(plan)) {
  alert("🚫 You must subscribe to access this feature.");
  window.location.href = "pricing.html";
}
    alert("🚚 Delivery Tracking is only available to Agency subscribers.");
</script>
<!-- SEO Meta Tags -->
<meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
<meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
<meta name="author" content="Buzzaraunt AI" />
<!-- Open Graph / Facebook -->
<meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
<meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
<meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
<meta property="og:url" content="https://buzzaraunt.com" />
<meta property="og:type" content="website" />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
<meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
<meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
<!-- Favicon -->
<link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Delivery Panel – Buzzaraunt</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
<link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-gray-100 text-gray-900">
  <div class="max-w-4xl mx-auto p-6">
    <h1 class="text-3xl font-bold text-yellow-600 mb-6">🚗 Delivery Management</h1>
    <div id="ordersContainer" class="space-y-6">
      <!-- Orders will be injected here -->
    </div>
  </div>
  <script>
    const restaurantId = localStorage.getItem('restaurantId');
    async function fetchOrders() {
      const res = await fetch('/api/orders?restaurantId=' + restaurantId);
      const data = await res.json();
      const container = document.getElementById('ordersContainer');
      container.innerHTML = '';
      if (data.success && data.orders.length > 0) {
        data.orders.forEach(order => {
          const div = document.createElement('div');
          div.className = "bg-white p-4 rounded shadow";
          div.innerHTML = \`
            <h3 class="text-xl font-bold mb-2">Order #\${order.id} - \${order.customerName}</h3>
            <p class="text-sm mb-1"><strong>Method:</strong> \${order.method}</p>
            <p class="text-sm mb-1"><strong>Status:</strong> \${order.status}</p>
            <p class="text-sm mb-1"><strong>Address:</strong> \${order.address || 'N/A'}</p>
            <label class="block mt-3 text-sm font-medium">Assign Driver:</label>
            <select onchange="assignDriver(\${order.id}, this.value)" class="w-full p-2 border rounded">
              <option value="">-- Select Driver --</option>
              \${data.drivers.map(driver => \`
                <option value="\${driver.id}" \${driver.id === order.driverId ? 'selected' : ''}>
                  \${driver.name}
                </option>
              \`).join('')}
            </select>
            <label class="block mt-3 text-sm font-medium">Update Status:</label>
            <select onchange="updateStatus(\${order.id}, this.value)" class="w-full p-2 border rounded">
              <option value="preparing" \${order.status === 'preparing' ? 'selected' : ''}>Preparing</option>
              <option value="out_for_delivery" \${order.status === 'out_for_delivery' ? 'selected' : ''}>Out for Delivery</option>
              <option value="delivered" \${order.status === 'delivered' ? 'selected' : ''}>Delivered</option>
            <p class="text-sm text-blue-600 mt-3">
              <a href="/track.html?oid=\${order.id}" target="_blank">🔗 Customer Tracking Link</a>
            </p>
          \`;
          container.appendChild(div);
        });
      } else {
        container.innerHTML = "<p>No delivery orders found.</p>";
      }
    }
    async function assignDriver(orderId, driverId) {
      await fetch('/api/orders/assign-driver', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ orderId, driverId })
      });
      fetchOrders();
    async function updateStatus(orderId, status) {
      await fetch('/api/orders/update-status', {
        body: JSON.stringify({ orderId, status })
    fetchOrders();
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
  <meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
  <meta name="author" content="Buzzaraunt AI" />

  <meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
  <meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
  <meta property="og:image" content//="https:buzzaraunt.com/og-image.jpg" />
  <meta property="og:url" content="//https://buzzaraunt.com" />
  <meta property="og:type" content=//"website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Buzzaraunt – AI for Restaurants"  
  <meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
  <meta name="twitter:image" conten//t="https://buzzaraunt.com/twitter-preview.jpg" />
  <link rel="icon" type="image/png" href="favicon.png" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Buzzaraunt™ - Viral AI Tools for Restaurants</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
  <link rel="stylesheet" href="/src/styles/styles.css" /> <script src="https://sdk.puter.com/puter.js"></script> <script src="https://kit.fontawesome.com/a2e0e6ad4e.js" crossorigin="anonymous"></script>
  <style>
    /* Custom styles for gradients and glassmorphism */
    body {
      background: linear-gradient(to bottom right, #f59e0b, #ef4444); /* From-orange-400 to-red-400 */
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .glass {
      background: rgba(255, 255, 255, 0.1); /* Slightly more transparent */
      backdrop-filter: blur(10px); /* Slightly more blur */
      border: 1px solid rgba(255, 255, 255, 0.15); /* Subtler border */
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Subtler shadow */
    .btn-primary {
      background: linear-gradient(to right, #f59e0b, #ef4444);
      transition: all 0.3s ease;
    .btn-primary:hover {
      box-shadow: 0 8px 25px rgba(245, 158, 11, 0.4);
      transform: translateY(-2px);
    .btn-secondary {
      background: rgba(255, 255, 255, 0.1); /* More transparent */
      border: 1px solid rgba(255, 255, 255, 0.2); /* Subtler border */
      backdrop-filter: blur(5px);
    .btn-secondary:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-1px);
    /* Keyframe animations for subtle entrance effects */
    @keyframes fade-in-down {
      from { opacity: 0; transform: translateY(-20px); }
      to { opacity: 1; transform: translateY(0); }
    @keyframes fade-in-up {
      from { opacity: 0; transform: translateY(20px); }
    @keyframes scale-in {
      from { opacity: 0; transform: scale(0.8); }
      to { opacity: 1; transform: scale(1); }
    .animate-fade-in-down { animation: fade-in-down 1s ease-out forwards; }
    .animate-fade-in-up { animation: fade-in-up 1s ease-out 0.3s forwards; }
    .animate-scale-in { animation: scale-in 1s ease-out 0.6s forwards; }
  </style>
</head>
<body class="text-white">
  <header class="p-6 flex justify-between items-center bg-transparent">
    <h1 class="text-4xl font-extrabold tracking-tight">🍽️ Buzzaraunt</h1>
    <div class="space-x-4">
      <a href="/login.html" class="text-white hover:text-yellow-200 transition duration-300">Login</a>
      <a href="/register.html" class="btn-primary text-black px-6 py-3 rounded-full font-semibold shadow-lg">Start Free Trial</a>
    </div>
  </header>
  <section class="text-center py-20 px-6 bg-transparent">
    <h2 class="text-6xl font-extrabold leading-tight tracking-tight drop-shadow-lg animate-fade-in-down">AI Tools That Make Your Restaurant Go Viral</h2>
    <p class="mt-8 text-2xl max-w-2xl mx-auto opacity-90 animate-fade-in-up">Create stunning promos, manage your menu, take online orders, and even deliver—all from one place. Start your 3-day free trial now.</p>
    <div class="mt-12 flex flex-col sm:flex-row items-center justify-center gap-4 animate-scale-in">
      <a href="/register.html" class="btn-primary text-white px-10 py-4 rounded-full text-xl font-semibold shadow-xl hover:scale-105 w-full sm:w-auto">Start Free Trial</a>
      <a href="#plans" class="btn-secondary text-white px-10 py-4 rounded-full text-xl font-semibold shadow-lg hover:scale-105 w-full sm:w-auto">
        💰 View Plans
      </a>
  </section>
  <section class="py-24 bg-white text-gray-900">
    <h2 class="text-5xl font-extrabold text-center mb-16 leading-tight">Unlock Massive Savings & Viral Marketing for Your Restaurant</h2>
    <div class="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-12 px-8">
      <div class="text-center p-8 bg-gray-50 rounded-2xl shadow-md transform hover:scale-105 transition-transform duration-300 border-b-4 border-blue-600">
        <div class="text-6xl mb-6 text-blue-500">💰</div>
        <h3 class="text-3xl font-bold mb-4 text-blue-800">Slash Delivery Fees with In-House System</h3>
        <p class="text-lg text-gray-700 leading-relaxed">
          Stop bleeding profits to third-party delivery apps. Buzzaraunt provides your own **seamless online ordering and in-house delivery system**. Manage everything from **menu creation to driver tracking and customer portals** – all under your control. This means **significantly more profit** for every order and a better experience for your customers.
        </p>
      </div>
      <div class="text-center p-8 bg-gray-50 rounded-2xl shadow-md transform hover:scale-105 transition-transform duration-300 border-b-4 border-red-600">
        <div class="text-6xl mb-6 text-red-500">🔥</div>
        <h3 class="text-3xl font-bold mb-4 text-red-800">AI-Driven Viral Ads That Target Customers</h3>
          Never struggle with social media again. Our **AI creates viral content** for you – from **happy hour specials** to **lunch and dinner promos**. It generates captivating captions, perfect music, voiceovers, and even **targets the right audience with optimized hashtags and metadata**. Effortlessly **post across platforms** and watch your restaurant's buzz grow!
      <div class="text-center p-8 bg-gray-50 rounded-2xl shadow-md transform hover:scale-105 transition-transform duration-300 border-b-4 border-yellow-600">
        <div class="text-6xl mb-6 text-yellow-500">✨</div>
        <h3 class="text-3xl font-bold mb-4 text-yellow-800">Priceless Menu & In-House Operations Control</h3>
          Take full command of your offerings. Our **intuitive menu builder** allows instant updates, mouth-watering image uploads, and real-time menu synchronization. Plus, streamline your kitchen with **integrated kitchen display systems and thermal printer support** for efficient order flow. Get **real-time views** of every order, from prep to delivery, making your operations smoother than ever.
  <section class="py-20 text-center bg-yellow-500 text-white">
    <h2 class="text-5xl font-extrabold mb-8 drop-shadow-lg">Ready to Supercharge Your Restaurant?</h2>
    <p class="text-2xl max-w-xl mx-auto mb-12 opacity-90">Buzzaraunt is an invaluable asset for the price. See the difference for yourself with a **3-day free trial**.</p>
    <a href="/register.html" class="btn-primary text-white px-12 py-5 rounded-full text-2xl font-semibold shadow-xl hover:scale-105 animate-pulse">Claim Your Free Trial Now!</a>
  <section id="plans" class="py-24 text-center bg-gradient-to-b from-orange-400 to-red-500 text-white">
    <h2 class="text-5xl font-extrabold mb-10 drop-shadow-lg">Choose Your Plan</h2>
    <p class="mb-16 text-xl opacity-90">All plans come with a **3-day free trial**. Cancel anytime.</p>
    <div class="flex flex-col md:flex-row justify-center gap-10 px-8">
      <div class="glass p-8 rounded-3xl text-left max-w-sm w-full transform hover:scale-105 transition-transform duration-300">
        <h3 class="text-3xl font-bold mb-4 text-yellow-300">Basic</h3>
        <p class="mt-2 text-base opacity-80">Perfect for small restaurants to get started</p>
        <ul class="mt-8 space-y-4 text-lg">
          <li>✅ Comprehensive Menu Builder</li>
          <li>✅ Basic AI Promo Generation</li>
          <li>✅ Social Sharing Tools</li>
        </ul>
        <p class="mt-10 text-4xl font-extrabold">$19<span class="text-xl opacity-70">/mo</span></p>
        <a href="/register.html?plan=basic" class="btn-primary block mt-8 px-8 py-4 rounded-full text-center font-semibold text-black shadow-lg hover:scale-105">Start Free Trial</a>
      <div class="glass p-8 rounded-3xl text-left max-w-sm w-full border-4 border-yellow-300 transform hover:scale-105 transition-transform duration-300">
        <h3 class="text-3xl font-bold mb-4 text-white">Pro</h3>
        <p class="mt-2 text-base opacity-80">Ideal for growing restaurants needing full control</p>
          <li>✅ Everything in Basic</li>
          <li>✅ Advanced Online Ordering System</li>
          <li>✅ Full Pickup & Delivery Management</li>
        <p class="mt-10 text-4xl font-extrabold">$49<span class="text-xl opacity-70">/mo</span></p>
        <a href="/register.html?plan=pro" class="btn-primary block mt-8 px-8 py-4 rounded-full text-center font-semibold text-black shadow-lg hover:scale-105">Start Free Trial</a>
        <h3 class="text-3xl font-bold mb-4 text-green-300">Agency</h3>
        <p class="mt-2 text-base opacity-80">For multiple locations, franchises & priority support</p>
          <li>✅ Everything in Pro</li>
          <li>✅ Multi-location & Brand Support</li>
          <li>✅ Dedicated Priority Support</li>
        <p class="mt-10 text-4xl font-extrabold">$99<span class="text-xl opacity-70">/mo</span></p>
        <a href="/register.html?plan=enterprise" class="btn-primary block mt-8 px-8 py-4 rounded-full text-center font-semibold text-black shadow-lg hover:scale-105">Start Free Trial</a>
  <footer class="text-center text-sm p-8 text-white bg-red-600 bg-opacity-30">
    &copy; 2025 Buzzaraunt™ – All Rights Reserved | <a href="/privacy.html" class="underline hover:text-yellow-200">Privacy</a> | <a href="/terms.html" class="underline hover:text-yellow-200">Terms</a>
  </footer>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
  <meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
  <meta name="author" content="Buzzaraunt AI" />

  <meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
  <meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
  <meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
  <meta property="og:url" content="https://buzzaraunt.com" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
  <meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
  <meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
  <link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Login – Buzzaraunt</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
  <link rel="stylesheet" href="/src/styles/styles.css" />
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); /* Similar to register page background */
      font-family: 'Inter', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      color: #333;
    }
    .login-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 1.5rem;
      padding: 2.5rem;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
      transition: transform 0.3s ease-in-out;
    .login-card:hover {
      transform: translateY(-5px);
    input {
      padding: 0.8rem;
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      transition: all 0.3s ease;
    input:focus {
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);
    .btn-submit {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      font-weight: 600;
      padding: 0.8rem 1.5rem;
      border-radius: 0.75rem;
    .btn-submit:hover {
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
      transform: translateY(-2px);
  </style>
</head>
<body class="bg-yellow-50 flex items-center justify-center min-h-screen">
  <form id="loginForm" class="login-card w-full max-w-md">
    <div class="text-center mb-8">
      <div class="text-6xl mb-4">🔑</div>
      <h2 class="text-3xl font-bold text-gray-800">Welcome Back!</h2>
      <p class="text-gray-600">Sign in to your Buzzaraunt account</p>
    </div>
    <div class="mb-4">
      <label for="email" class="block mb-2 text-sm font-medium text-gray-700">Email</label>
      <input type="email" id="email" name="email" required class="w-full" />
    <div class="mb-6">
      <label for="password" class="block mb-2 text-sm font-medium text-gray-700">Password</label>
      <input type="password" id="password" name="password" required class="w-full" />
    <button type="submit" class="btn-submit w-full">Login</button>
    <p class="mt-6 text-center text-sm text-gray-600">Don't have an account? <a href="register.html" class="text-blue-700 font-semibold hover:underline">Register here</a></p>
  </form>
  <script>
    // API_URL set to your deployed Render Backend URL
    const API_URL = "https://buzzaraunt.onrender.com"; // User confirmed this is the backend URL
    document.getElementById('loginForm').addEventListener('submit', async function (e) {
      e.preventDefault();
      const formData = new FormData(this);
      const data = Object.fromEntries(formData.entries());
      try {
        const res = await fetch(`${API_URL}/api/auth/login`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        const result = await res.json();
        if (res.ok && result.success) { // Check both HTTP status and backend success flag
          // Store user data in localStorage (CRITICAL for subsequent pages)
          if (result.userId) {
            localStorage.setItem('userId', result.userId);
          }
          if (result.token) {
            localStorage.setItem('token', result.token);
          if (result.user) {
            localStorage.setItem('user', JSON.stringify(result.user));
          alert('Login successful! Redirecting...');
          window.location.href = '/dashboard.html';
        } else {
          alert(result.message || 'Login failed. Please check your credentials.');
          console.error('Login failed:', result.message || 'Unknown error');
        }
      } catch (error) {
        console.error('Fetch error during login:', error);
        alert('Network error or server unavailable. Please try again later.');
      }
    });
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
<script>
const allowedPlans = ["basic", "pro", "enterprise"];
const plan = localStorage.getItem("buzz_plan");
if (!allowedPlans.includes(plan)) {
  alert("🚫 You must subscribe to access this feature.");
  window.location.href = "pricing.html";
}
  const plan = localStorage.getItem("userPlan");

  if (plan !== "pro" && plan !== "agency") {
    alert("🍽️ Kitchen Order View requires Pro or Agency plan.");
    window.location.href = "pricing.html";
  }
</script>
<!-- SEO Meta Tags -->
<meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
<meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
<meta name="author" content="Buzzaraunt AI" />
<!-- Open Graph / Facebook -->
<meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
<meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
<meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
<meta property="og:url" content="https://buzzaraunt.com" />
<meta property="og:type" content="website" />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
<meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
<meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
<!-- Favicon -->
<link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Live Orders – Buzzaraunt</title>
  <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-gray-100 text-gray-900">
  <div class="max-w-5xl mx-auto p-6">
    <h1 class="text-3xl font-bold text-green-700 mb-6">🧾 Live Kitchen Orders</h1>
    <div id="ordersContainer" class="space-y-4"></div>
    <div id="emptyMsg" class="text-center text-gray-600 mt-8 hidden">
      No orders yet.
    </div>
  </div>
  <script>
    const token = localStorage.getItem('token');
    if (!token) {
      alert("Please log in");
      location.href = 'login.html';
    }
    async function loadOrders() {
      const res = await fetch('process.env.REACT_APP_BACKEND_URL/api/orders', {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      const data = await res.json();
      const ordersContainer = document.getElementById('ordersContainer');
      ordersContainer.innerHTML = '';
      if (!data.orders || data.orders.length === 0) {
        document.getElementById('emptyMsg').classList.remove('hidden');
        return;
      }
      data.orders.forEach(order => {
        const div = document.createElement('div');
        div.className = "bg-white rounded shadow p-4";
        div.innerHTML = `
          <p class="text-lg font-bold">🍽️ ${order.customerName} — ${order.method}</p>
          <p class="text-sm text-gray-600">📍 ${order.address || 'N/A'} | 🕒 ${new Date(order.createdAt).toLocaleString()}</p>
          <ul class="list-disc ml-6 mt-2">
            ${order.cart.map(item => `<li>${item.qty}× ${item.item}</li>`).join('')}
          </ul>
          <p class="mt-2 font-semibold">💵 Total: $${order.total}</p>
          <p class="text-sm text-blue-600 mt-1">Status: ${order.status}</p>
        `;
        ordersContainer.appendChild(div);
    loadOrders();
    setInterval(loadOrders, 10000); // Refresh every 10 sec
  </script>
const user = JSON.parse(localStorage.getItem("user"));
const allowedPlans = ["basic","pro","enterprise"];
if (!user || !allowedPlans.includes(user.plan)) {
alert("🚫 Access denied: Please subscribe to a plan.");
window.location.href = "pricing.html";
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Buzzaraunt Pricing</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
  <link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-gray-100 text-gray-900">
  <div class="max-w-6xl mx-auto p-8">
    <h1 class="text-4xl font-bold text-center text-yellow-600 mb-10">🍽️ Buzzaraunt Pricing</h1>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Basic Plan -->
      <div class="bg-white p-6 rounded-lg shadow text-center">
        <h3 class="text-xl font-bold mb-2">Basic</h3>
        <p class="text-gray-600 mb-4">$9/month</p>
        <div id="paypal-button-container-P-26P54410G50146132NBTTQ7Y"></div>
      </div>
      <!-- Pro Plan -->
        <h3 class="text-xl font-bold mb-2">Pro</h3>
        <p class="text-gray-600 mb-4">$19/month</p>
        <div id="paypal-button-container-P-9TE454589N1916526NBTTSLA"></div>
      <!-- Enterprise Plan -->
        <h3 class="text-xl font-bold mb-2">Enterprise</h3>
        <p class="text-gray-600 mb-4">$99/month</p>
        <div id="paypal-button-container-P-9FM40680D9173120ANBTTTVQ"></div>
    </div>
  </div>
  <!-- PayPal SDK Script (Include Once) -->
  <script src="https://www.paypal.com/sdk/js?client-id=ATYlT9p6S96zZq0t-_SF0CGjwTr29mHE0YyW2TacuJ6QxjnEcznv5TwE6bXhxkEbILf8P5i9rqZz5-SZ&vault=true&intent=subscription" data-sdk-integration-source="button-factory"></script>
  <script>
    // BASIC $9
    paypal.Buttons({
      style: { shape: 'rect', color: 'gold', layout: 'vertical', label: 'subscribe' },
      createSubscription: function (data, actions) {
        return actions.subscription.create({ plan_id: 'P-26P54410G50146132NBTTQ7Y' });
      },
      onApprove: function (data, actions) {
        alert('Basic Plan Subscribed! ID: ' + data.subscriptionID);
      }
    }).render('#paypal-button-container-P-26P54410G50146132NBTTQ7Y');
    // PRO $19
        return actions.subscription.create({ plan_id: 'P-9TE454589N1916526NBTTSLA' });
        alert('Pro Plan Subscribed! ID: ' + data.subscriptionID);
    }).render('#paypal-button-container-P-9TE454589N1916526NBTTSLA');
    // ENTERPRISE $99
        return actions.subscription.create({ plan_id: 'P-9FM40680D9173120ANBTTTVQ' });
        alert('Enterprise Plan Subscribed! ID: ' + data.subscriptionID);
    }).render('#paypal-button-container-P-9FM40680D9173120ANBTTTVQ');
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
<script>
  const userPlan = localStorage.getItem("userPlan");

  if (userPlan === "basic") {
    document.addEventListener("DOMContentLoaded", () => {
      document.getElementById("aiPromoSection").style.display = "none";
      alert("Upgrade to Pro or Agency to use the AI Promo Generator.");
    });
  }
const allowedPlans = ["basic", "pro", "enterprise"];
const plan = localStorage.getItem("buzz_plan");
if (!allowedPlans.includes(plan)) {
  alert("🚫 You must subscribe to access this feature.");
  window.location.href = "pricing.html";
}
  const plan = localStorage.getItem("userPlan");
  if (plan !== "pro" && plan !== "agency") {
    alert("⚠️ Your plan doesn't include the Promo Generator. Upgrade to access.");
    window.location.href = "pricing.html";
</script>
<!-- SEO Meta Tags -->
<meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
<meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
<meta name="author" content="Buzzaraunt AI" />
<!-- Open Graph / Facebook -->
<meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
<meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
<meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
<meta property="og:url" content="https://buzzaraunt.com" />
<meta property="og:type" content="website" />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
<meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
<meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
<!-- Favicon -->
<link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>AI Promo Generator – Buzzaraunt</title>
  <script src="https://js.puter.com/v2/"></script>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
<link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-yellow-50 text-gray-900">
  if (!["pro", "agency"].includes(plan)) {
    alert("🚫 Upgrade to Pro or Agency to use this feature.");
  <div class="max-w-xl mx-auto p-6">
    <h1 class="text-3xl font-bold text-yellow-600 mb-4">✨ AI Promo Generator</h1>
    <!-- Promo Type -->
    <label class="block font-semibold mb-1">Promo Type:</label>
    <select id="promoType" class="w-full p-2 border rounded mb-4">
      <option value="breakfast">Breakfast Special</option>
      <option value="lunch">Lunch Deal</option>
      <option value="happy_hour">Happy Hour</option>
      <option value="dinner">Dinner Special</option>
      <option value="custom">Custom Promo</option>
    </select>
    <!-- Custom Input -->
    <textarea id="customInput" placeholder="Describe your custom promo (optional)" class="w-full p-2 border rounded mb-4" style="display:none"></textarea>
    <button onclick="generatePromo()" class="bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded w-full">🎯 Generate with AI</button>
    <!-- Output -->
    <div id="output" class="mt-6 hidden">
      <h2 class="text-xl font-bold mb-2">📣 Generated Promo</h2>
      <img id="promoImage" class="w-full rounded mb-4 hidden" alt="Promo image"/>
      <p class="text-lg mb-2" id="captionText">...</p>
      <p class="text-sm text-gray-600 mb-1"><strong>Voiceover:</strong> <span id="voiceLink"></span></p>
      <div class="flex gap-4 mt-4">
        <button onclick="downloadPromo()" class="bg-green-600 text-white px-4 py-2 rounded">⬇️ Download</button>
        <button onclick="sharePromo()" class="bg-blue-600 text-white px-4 py-2 rounded">📲 Share</button>
      </div>
    </div>
    <hr class="my-6" />
    <h2 class="text-lg font-bold mb-2">📅 Schedule Promo</h2>
    <label class="block text-sm font-semibold mb-1">Select date & time to post:</label>
    <input type="datetime-local" id="scheduleTime" class="w-full p-2 border rounded mb-2" />
    <button onclick="saveScheduledPromo()" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded w-full">
      🕒 Save Scheduled Promo
    </button>
    <div id="saveMsg" class="text-sm text-green-600 mt-2 hidden">✅ Promo scheduled successfully!</div>
  </div>
  <script>
    const promoTypeEl = document.getElementById('promoType');
    const customInput = document.getElementById('customInput');
    promoTypeEl.addEventListener('change', () => {
      customInput.style.display = promoTypeEl.value === 'custom' ? 'block' : 'none';
    async function generatePromo() {
      const type = promoTypeEl.value;
      const custom = customInput.value;
      const idea = type === 'custom'
        ? custom
        : {
            breakfast: "Breakfast Special with coffee, eggs, bacon and toast",
            lunch: "Lunch Combo under $10 with burger and fries",
            happy_hour: "Happy Hour deal with drinks, appetizers and friends",
            dinner: "Dinner special with pasta, steak or wine"
          }[type];
      const prompt = `
You're an expert food marketing AI. Write a short, catchy social media post for a restaurant.
Include:
- Hook (emojis okay)
- Caption (1–2 lines max)
- Hashtags
Promo: ${idea}
Restaurant: Buzzaraunt
Style: Energetic, viral, bold
      `;
      document.getElementById('output').classList.remove('hidden');
      document.getElementById('captionText').textContent = "Generating...";
      const textResult = await puter.ai.generate({ prompt });
      document.getElementById('captionText').textContent = textResult.text;
      const voiceResult = await puter.ai.voice({ text: textResult.text });
      document.getElementById('voiceLink').innerHTML = \`<a href="\${voiceResult.url}" target="_blank" class="text-blue-600 underline">🔊 Play Voiceover</a>\`;
      const imgPrompt = \`A bold food promotion visual: \${idea}, vivid colors, social media ad style\`;
      const image = await puter.ai.image({ prompt: imgPrompt, size: '512x512' });
      const promoImage = document.getElementById('promoImage');
      promoImage.src = image.url;
      promoImage.classList.remove('hidden');
    }
    function downloadPromo() {
      alert("Download will capture image + voice + text (future enhancement).");
    function sharePromo() {
      alert("Use Web Share or export to Instagram/Facebook (future).");
    async function saveScheduledPromo() {
      const token = localStorage.getItem('token');
      if (!token) return alert("You must be logged in.");
      const promoData = {
        caption: document.getElementById('captionText').textContent,
        music: 'Auto-generated',
        voiceLink: document.getElementById('voiceLink')?.querySelector('a')?.href,
        imageSrc: document.getElementById('promoImage').src,
        scheduledTime: document.getElementById('scheduleTime').value
      };
      const res = await fetch('/api/promos', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: \`Bearer \${token}\`
        },
        body: JSON.stringify(promoData)
      });
      const result = await res.json();
      if (result.success) {
        document.getElementById('saveMsg').classList.remove('hidden');
      } else {
        alert(result.message || "Error saving promo");
      }
  </script>
const user = JSON.parse(localStorage.getItem("user"));
const allowedPlans = ["basic","pro","enterprise"];
if (!user || !allowedPlans.includes(user.plan)) {
alert("🚫 Access denied: Please subscribe to a plan.");
window.location.href = "pricing.html";
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
<script>
const allowedPlans = ["basic", "pro", "enterprise"];
const plan = localStorage.getItem("buzz_plan");
if (!allowedPlans.includes(plan)) {
  alert("🚫 You must subscribe to access this feature.");
  window.location.href = "pricing.html";
}
  const plan = localStorage.getItem("userPlan");

  if (!["basic", "pro", "agency"].includes(plan)) {
    alert("📅 Scheduled Promos are not available on your current plan.");
    window.location.href = "pricing.html";
  }
</script>
<!-- SEO Meta Tags -->
<meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
<meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
<meta name="author" content="Buzzaraunt AI" />
<!-- Open Graph / Facebook -->
<meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
<meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
<meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
<meta property="og:url" content="https://buzzaraunt.com" />
<meta property="og:type" content="website" />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
<meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
<meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
<!-- Favicon -->
<link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Scheduled Promos – Buzzaraunt</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
<link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-gray-100 text-gray-900">
  <div class="max-w-3xl mx-auto p-6">
    <h1 class="text-3xl font-bold text-purple-700 mb-6">📅 Scheduled Promos</h1>
    <div id="promoList" class="space-y-6"></div>
    <div id="emptyMsg" class="text-center text-gray-600 mt-8 hidden">
      No scheduled promos yet. <a href="promo.html" class="text-blue-600 underline">Create one</a>!
    </div>
  </div>
  <script>
    let saved = [];
    async function loadPromos() {
      const token = localStorage.getItem('token');
      if (!token) return;
      const res = await fetch('/api/promos', {
        headers: { Authorization: \`Bearer \${token}\` }
      });
      const result = await res.json();
      if (result.success) {
        saved = result.promos;
        renderPromos();
      } else {
        document.getElementById('emptyMsg').classList.remove('hidden');
      }
    }
    function renderPromos() {
      const promoList = document.getElementById('promoList');
      promoList.innerHTML = '';
      if (saved.length === 0) {
        return;
      saved.forEach((promo) => {
        const card = document.createElement('div');
        card.className = "bg-white rounded shadow p-4";
        card.innerHTML = `
          <div class="flex flex-col sm:flex-row gap-4">
            <img src="${promo.image_src}" alt="Promo" class="w-40 h-40 object-cover rounded border" />
            <div class="flex-1">
              <p class="font-bold mb-1">${promo.caption}</p>
              <p class="text-sm text-gray-600 mb-1">🎵 <strong>Music:</strong> ${promo.music}</p>
              <p class="text-sm text-gray-600 mb-1">🕒 <strong>Scheduled:</strong> ${new Date(promo.scheduled_time).toLocaleString()}</p>
              <p class="text-sm mb-1">🎤 <a href="${promo.voice_link}" class="text-blue-600 underline" target="_blank">Play Voice</a></p>
              <button onclick="deletePromo(${promo.id})" class="mt-2 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-sm">🗑️ Delete</button>
            </div>
          </div>
        `;
        promoList.appendChild(card);
    async function deletePromo(id) {
      if (!confirm("Delete this promo?")) return;
      await fetch(\`/api/promos/\${id}\`, {
        method: 'DELETE',
        headers: {
          Authorization: \`Bearer \${token}\`
        }
      loadPromos();
    loadPromos();
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
  <meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
  <meta name="author" content="Buzzaraunt AI" />

  <meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
  <meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
  <meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
  <meta property="og:url" content="https://buzzaraunt.com" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
  <meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
  <meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
  <link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Create Account – Buzzaraunt</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
  <link rel="stylesheet" href="/src/styles/styles.css" />
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 1rem;
    }
    .register-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 1.5rem;
      padding: 2.5rem;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
      transition: transform 0.3s ease-in-out;
    .register-card:hover {
      transform: translateY(-5px);
    .logo-icon {
      width: 60px;
      height: 60px;
      border-radius: 16px;
      display: inline-flex;
      margin-bottom: 1rem;
      font-size: 1.8rem;
      color: white;
      box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
    input, select {
      padding: 0.8rem;
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      transition: all 0.3s ease;
    input:focus, select:focus {
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);
    .btn-submit {
      font-weight: 600;
      padding: 0.8rem 1.5rem;
      border-radius: 0.75rem;
    .btn-submit:hover {
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
      transform: translateY(-2px);
    .plan-option {
      background-color: #f3f4f6;
      border: 1px solid #e5e7eb;
      text-align: center;
      cursor: pointer;
    .plan-option:hover {
      background-color: #e0e7ff;
    .plan-option.active {
      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
  </style>
</head>
<body class="bg-yellow-100 flex items-center justify-center min-h-screen">
  <form id="registerForm" class="register-card w-full max-w-md">
    <div class="text-center mb-8">
      <div class="logo-icon mx-auto">🍽️</div>
      <h2 class="text-3xl font-bold text-gray-800 mb-2">Join Buzzaraunt</h2>
      <p class="text-gray-600">Create your AI-powered restaurant account</p>
    </div>
    <div class="mb-4">
      <label for="email" class="block mb-2 text-sm font-medium text-gray-700">Business Email</label>
      <input type="email" id="email" name="email" required class="w-full" />
      <label for="password" class="block mb-2 text-sm font-medium text-gray-700">Password</label>
      <input type="password" id="password" name="password" required class="w-full" />
    <div class="mb-6">
      <label for="restaurantName" class="block mb-2 text-sm font-medium text-gray-700">Restaurant Name</label>
      <input type="text" id="restaurantName" name="restaurantName" required class="w-full" />
    <h3 class="text-lg font-semibold text-gray-800 mb-4">Choose Your Plan</h3>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
      <div class="plan-option active" data-plan="basic">
        <div class="font-semibold">Basic</div>
        <div class="text-sm opacity-80">$19/month</div> </div>
      <div class="plan-option" data-plan="pro">
        <div class="font-semibold">Pro</div>
        <div class="text-sm opacity-80">$49/month</div> </div>
      <div class="plan-option" data-plan="enterprise">
        <div class="font-semibold">Agency</div>
        <div class="text-sm opacity-80">$99/month</div> </div>
    <input type="hidden" name="planType" id="planTypeHidden" value="basic"> <button type="submit" class="btn-submit w-full">Start Free Trial</button>
    <p class="mt-6 text-center text-sm text-gray-600">Already have an account? <a href="login.html" class="text-blue-700 font-semibold hover:underline">Sign in here</a></p>
  </form>
  <script>
    // API_URL set to your deployed Render Backend URL
    const API_URL = "https://buzzaraunt.onrender.com"; // User confirmed this is the backend URL
    // Plan selector functionality
    const planOptions = document.querySelectorAll('.plan-option');
    const planTypeHidden = document.getElementById('planTypeHidden');
    // Read plan from URL query parameter (if coming from index.html pricing section)
    const urlParams = new URLSearchParams(window.location.search);
    let initialPlan = urlParams.get('plan') || 'basic'; // Default to basic
    // Set active plan based on URL parameter or default
    planOptions.forEach(option => {
      if (option.dataset.plan === initialPlan) {
        option.classList.add('active');
        planTypeHidden.value = initialPlan;
      } else {
        option.classList.remove('active');
      }
      option.addEventListener('click', () => {
        planOptions.forEach(opt => opt.classList.remove('active'));
        planTypeHidden.value = option.dataset.plan; // Update hidden input value
      });
    });
    document.getElementById('registerForm').addEventListener('submit', async function (e) {
      e.preventDefault();
      const formData = new FormData(this);
      const data = Object.fromEntries(formData.entries());
      // The planType is already in data from the hidden input
      const submitBtn = e.target.querySelector('button[type="submit"]');
      submitBtn.disabled = true; // Disable button during submission
      submitBtn.textContent = 'Creating Account...';
      try {
        const res = await fetch(`${API_URL}/api/auth/register`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        const result = await res.json();
        if (res.ok && result.success) { // Check both HTTP status and backend success flag
          // Store user data in localStorage (CRITICAL for subsequent pages)
          if (result.userId) {
            localStorage.setItem('userId', result.userId);
          }
          if (result.token) {
            localStorage.setItem('token', result.token);
          if (result.user) {
            localStorage.setItem('user', JSON.stringify(result.user));
          alert('Account created! Redirecting to restaurant setup...');
          submitBtn.textContent = 'Account Created!';
          window.location.href = '/restauraunt.html'; // Redirect to restaurant setup
        } else {
          alert(result.message || 'Registration failed. Please try again.');
          console.error('Registration failed:', result.message || 'Unknown error');
          submitBtn.textContent = 'Start Free Trial'; // Re-enable and reset button
          submitBtn.disabled = false;
        }
      } catch (error) {
        console.error('Fetch error during registration:', error);
        alert('Network error or server unavailable. Please try again later.');
        submitBtn.textContent = 'Start Free Trial'; // Re-enable and reset button
        submitBtn.disabled = false;
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
  <meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
  <meta name="author" content="Buzzaraunt AI" />

  <meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
  <meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
  <meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
  <meta property="og:url" content="https://buzzaraunt.com" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
  <meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
  <meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
  <link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Create Your Restaurant – Buzzaraunt</title>
  <link rel="preload" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'"><noscript><link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"></noscript>
  <link rel="stylesheet" href="/src/styles/styles.css" /> <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
    * {
      font-family: 'Inter', sans-serif;
    }
    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      position: relative;
      overflow-x: hidden;
      display: flex; /* Make body a flex container to center content */
      align-items: center; /* Center content vertically */
      justify-content: center; /* Center content horizontally */
      padding: 1rem; /* Add some padding */
    body::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><circle cx="100" cy="100" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="900" cy="200" r="3" fill="rgba(255,255,255,0.1)"/><circle cx="300" cy="800" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="700" cy="600" r="3" fill="rgba(255,255,255,0.1)"/></svg>');
      animation: drift 30s infinite linear;
      pointer-events: none;
    @keyframes drift {
      0% { transform: translateX(0px) translateY(0px); }
      33% { transform: translateX(-20px) translateY(-10px); }
      66% { transform: translateX(10px) translateY(-20px); }
      100% { transform: translateX(0px) translateY(0px); }
    .glass-container {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.1);
      border-radius: 24px;
    .step-container {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 2rem;
      margin-bottom: 2rem;
      border: 1px solid rgba(255, 255, 255, 0.3);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    .step-container:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    .step-header {
      display: flex;
      align-items: center;
      gap: 1rem;
    .step-icon {
      width: 60px;
      height: 60px;
      border-radius: 16px;
      justify-content: center;
      font-size: 1.5rem;
      color: white;
      box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
    .step-title {
      font-size: 1.8rem;
      font-weight: 700;
      color: #1f2937;
      margin: 0;
    .step-subtitle {
      color: #6b7280;
      font-size: 0.9rem;
    .input-group {
      margin-bottom: 1.5rem;
    .input-group input,
    .input-group textarea,
    .input-group select {
      width: 100%;
      padding: 1rem;
      border: 2px solid #e5e7eb;
      border-radius: 12px;
      background: white;
      font-size: 1rem;
      outline: none;
      resize: none;
    .input-group input:focus,
    .input-group textarea:focus,
    .input-group select:focus {
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      transform: translateY(-2px);
    .input-group label {
      left: 1rem;
      top: 1rem;
      padding: 0 0.5rem;
      font-weight: 500;
      border-radius: 4px;
    .input-group input:focus + label,
    .input-group input:not(:placeholder-shown) + label,
    .input-group textarea:focus + label,
    .input-group textarea:not(:placeholder-shown) + label {
      top: -0.5rem;
      font-size: 0.8rem;
      color: #667eea;
      font-weight: 600;
    .file-upload {
      display: inline-block;
    .file-upload input[type="file"] {
      opacity: 0;
      height: 100%;
      cursor: pointer;
    .file-upload-label {
      gap: 0.5rem;
      padding: 3rem 1rem;
      border: 2px dashed #d1d5db;
      background: #f9fafb;
    .file-upload:hover .file-upload-label {
      background: #f0f4ff;
    .logo-preview {
      margin-top: 1rem;
      max-height: 120px;
      object-fit: cover;
    .btn-primary {
      border: none;
      padding: 1rem 2rem;
      overflow: hidden;
    .btn-primary:hover {
      box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
    .btn-primary:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    .btn-secondary {
      background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    .btn-secondary:hover {
      box-shadow: 0 15px 35px rgba(16, 185, 129, 0.4);
    .btn-finish {
      background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
      padding: 1.5rem 3rem;
      font-size: 1.1rem;
    .btn-finish:hover {
      box-shadow: 0 20px 40px rgba(245, 158, 11, 0.4);
    .menu-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
    @media (max-width: 768px) {
      .menu-grid {
        grid-template-columns: 1fr;
      }
    .menu-item {
      border: 1px solid #e5e7eb;
      padding: 1.5rem;
      margin-bottom: 1rem;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
      border-left: 4px solid #10b981;
    .menu-item:hover {
      transform: translateX(5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    .menu-item h4 {
      margin-bottom: 0.5rem;
    .menu-item .price {
      color: #10b981;
    .menu-item .description {
      margin-top: 0.5rem;
    .progress-bar {
      height: 4px;
      background: #e5e7eb;
      border-radius: 2px;
    .progress-fill {
      background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
      transition: width 0.5s ease;
    .success-message {
      animation: slideIn 0.5s ease;
    @keyframes slideIn {
      from {
        transform: translateY(-20px);
        opacity: 0;
      to {
        transform: translateY(0);
        opacity: 1;
    .loading {
      opacity: 0.7;
    .loading::after {
      top: 50%;
      left: 50%;
      width: 20px;
      height: 20px;
      border: 2px solid transparent;
      border-top: 2px solid white;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      transform: translate(-50%, -50%);
    @keyframes spin {
      0% { transform: translate(-50%, -50%) rotate(0deg); }
      100% { transform: translate(-50%, -50%) rotate(360deg); }
    .empty-state {
      text-align: center;
      padding: 3rem;
    .empty-state-icon {
      font-size: 3rem;
    .completion-badge {
      display: inline-flex;
      background: rgba(16, 185, 129, 0.1);
      color: #059669;
      padding: 0.5rem 1rem;
      margin-left: 1rem;
  </style>
</head>
<body class="min-h-screen p-4">
  <div class="max-w-4xl mx-auto">
    <div class="progress-bar">
      <div class="progress-fill" style="width: 0%"></div>
    </div>
    <div class="glass-container p-6 mb-8 text-white">
      <div class="text-center">
        <h1 class="text-4xl font-bold mb-2">🍽️ Create Your Restaurant</h1>
        <p class="text-opacity-80">Set up your restaurant profile and menu in just a few steps</p>
      </div>
    <div class="step-container" id="step1">
      <div class="step-header">
        <div class="step-icon">🏪</div>
        <div>
          <h2 class="step-title">Restaurant Profile</h2>
          <p class="step-subtitle">Tell us about your restaurant</p>
        </div>
      <form id="restaurantForm" class="space-y-6">
        <div class="input-group">
          <input type="text" name="name" placeholder=" " required />
          <label>Restaurant Name</label>
          <textarea name="description" placeholder=" " rows="4"></textarea>
          <label>Description</label>
          <div class="file-upload">
            <input type="file" name="logo" accept="image/*" />
            <div class="file-upload-label">
              <span>📸</span>
              <span>Upload Logo</span>
            </div>
          </div>
          <img id="logoPreview" class="logo-preview hidden" />
          <textarea name="hours" placeholder=" " rows="4"></textarea>
          <label>Hours of Operation</label>
          <input type="url" name="website" placeholder=" " />
          <label>Website (optional)</label>
        <button type="submit" class="btn-primary">
          💾 Save Restaurant Profile
        </button>
      </form>
    <div class="step-container" id="step2">
        <div class="step-icon">📋</div>
          <h2 class="step-title">Build Your Menu</h2>
          <p class="step-subtitle">Add your delicious items</p>
      <form id="menuForm" class="space-y-6">
        <div class="menu-grid">
          <div class="input-group">
            <input type="text" name="item" placeholder=" " required />
            <label>Item Name</label>
            <input type="text" name="price" placeholder=" " required />
            <label>Price ($)</label>
          <textarea name="description" placeholder=" " rows="3"></textarea>
        <button type="submit" class="btn-secondary w-full">
          ➕ Add Menu Item
      <div class="mt-8">
        <h3 class="text-xl font-semibold text-gray-800 mb-4"> 📋 Your Menu</h3>
        <div id="menuPreview" class="min-h-32">
          <div class="empty-state">
            <div class="empty-state-icon">🍽️</div>
            <p>No menu items yet. Add your first item above!</p>
    <div class="step-container" id="step3">
        <div class="step-icon">🎉</div>
          <h2 class="step-title">Almost Done!</h2>
          <p class="step-subtitle">Your restaurant is ready to go live</p>
        <p class="text-gray-600 mb-6">Great job! Your restaurant profile and menu are set up. You're ready to start using Buzzaraunt's AI-powered marketing tools.</p>
        <button id="finishBtn" class="btn-finish">
          🚀 Go to Dashboard
  </div>
  <script>
    const restaurantForm = document.getElementById('restaurantForm');
    const menuForm = document.getElementById('menuForm');
    const menuPreview = document.getElementById('menuPreview');
    const logoInput = restaurantForm.querySelector('input[name="logo"]');
    const logoPreview = document.getElementById('logoPreview');
    const finishBtn = document.getElementById('finishBtn');
    const progressFill = document.querySelector('.progress-fill');
    let restaurantId = localStorage.getItem('restaurantId');
    const userId = localStorage.getItem('userId');
    let menuItems = [];
    let currentStep = 1;
    // *** IMPORTANT: API_URL set to your deployed Render Backend URL ***
    const API_URL = "https://buzzaraunt.onrender.com"; // User confirmed this is the backend URL
    // Initial authentication check: Ensure user is logged in
    const token = localStorage.getItem('token');
    const user = JSON.parse(localStorage.getItem('user'));
    if (!token || !user || !userId) {
      alert('⚠️ Please log in first to set up your restaurant.');
      window.location.href = '/login.html'; // Redirect to login page
    // Update progress bar
    function updateProgress() {
      const progress = (currentStep / 3) * 100;
      progressFill.style.width = `${progress}%`;
    // Show completion badge
    function showCompletionBadge(stepElement) {
      const header = stepElement.querySelector('.step-header');
      const existingBadge = header.querySelector('.completion-badge');
      if (!existingBadge) {
        const badge = document.createElement('div');
        badge.className = 'completion-badge';
        badge.innerHTML = '<span>✅</span><span>Complete</span>';
        header.appendChild(badge);
    // Show success message
    function showSuccessMessage(message, container) {
      const successDiv = document.createElement('div');
      successDiv.className = 'success-message';
      successDiv.textContent = message;
      container.insertBefore(successDiv, container.firstChild);
      setTimeout(() => {
        successDiv.remove();
      }, 3000);
    // Logo preview
    logoInput.addEventListener('change', function () {
      const file = this.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
          logoPreview.src = e.target.result;
          logoPreview.classList.remove('hidden');
        };
        reader.readAsDataURL(file);
    });
    // Submit restaurant profile
    restaurantForm.addEventListener('submit', async function (e) {
      e.preventDefault();
      const submitBtn = e.target.querySelector('button[type="submit"]');
      submitBtn.classList.add('loading');
      submitBtn.textContent = 'Saving...';
      const formData = new FormData(restaurantForm);
      const payload = {
        userId, // Ensure userId is sent
        name: formData.get('name'),
        description: formData.get('description'),
        hours: formData.get('hours'),
        website: formData.get('website')
      };
      try {
        const res = await fetch(`${API_URL}/api/restaurant/create`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}` // Include the JWT token
          },
          body: JSON.stringify(payload)
        });
        const result = await res.json();
        if (res.ok && result.success) { // Check both res.ok and backend's success flag
          restaurantId = result.restaurantId;
          localStorage.setItem('restaurantId', restaurantId); // Save new restaurantId
          showSuccessMessage('✅ Restaurant profile saved successfully!', document.getElementById('step1'));
          showCompletionBadge(document.getElementById('step1'));
          currentStep = 2;
          updateProgress();
          // Smooth scroll to menu section
          document.getElementById('step2').scrollIntoView({ behavior: 'smooth' });
          submitBtn.textContent = '✅ Profile Saved';
          submitBtn.style.background = 'linear-gradient(135deg, #10b981 0%, #059669 100%)';
        } else {
          throw new Error(result.message || `Failed to save restaurant: ${res.statusText}`);
        }
      } catch (error) {
        console.error('Error:', error);
        alert(error.message || 'Network error or server unavailable. Please try again later.'); // Show alert for user
        submitBtn.textContent = '❌ Try Again';
        submitBtn.style.background = 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)';
        setTimeout(() => {
          submitBtn.classList.remove('loading');
          submitBtn.textContent = '💾 Save Restaurant Profile';
          submitBtn.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
        }, 3000);
    // Submit menu items
    menuForm.addEventListener('submit', async function (e) {
      submitBtn.textContent = 'Adding...';
      const formData = new FormData(menuForm);
      const item = formData.get('item');
      const price = formData.get('price');
      const description = formData.get('description');
      if (!restaurantId) {
        alert('⚠️ Please save your restaurant profile first (Step 1) before adding menu items.');
        document.getElementById('step1').scrollIntoView({ behavior: 'smooth' });
        submitBtn.classList.remove('loading'); // Ensure button state resets
        submitBtn.textContent = '➕ Add Menu Item';
        return;
        const res = await fetch(`${API_URL}/api/menu/add`, {
          body: JSON.stringify({ restaurantId, item, price, description })
          // Add to local menu items
          menuItems.push({ item, price, description });
          // Update menu preview
          updateMenuPreview();
          // Reset form
          menuForm.reset();
          // Show success
          showSuccessMessage(`✅ "${item}" added to menu!`, document.getElementById('step2'));
          submitBtn.textContent = '✅ Added!';
          setTimeout(() => {
            submitBtn.classList.remove('loading');
            submitBtn.textContent = '➕ Add Menu Item';
            submitBtn.style.background = 'linear-gradient(135deg, #10b981 0%, #059669 100%)';
          }, 2000);
          // Update progress if first menu item added
          if (menuItems.length === 1) {
            showCompletionBadge(document.getElementById('step2'));
            currentStep = 3;
            updateProgress();
          }
          throw new Error(result.message || `Failed to add menu item: ${res.statusText}`);
          submitBtn.textContent = '➕ Add Menu Item';
    // Update menu preview
    function updateMenuPreview() {
      if (menuItems.length === 0) {
        menuPreview.innerHTML = `
        `;
      } else {
        menuPreview.innerHTML = menuItems.map(item => `
          <div class="menu-item">
            <div style="display: flex; justify-content: space-between; align-items: start;">
              <h4>${item.item}</h4>
              <span class="price">$${item.price}</span>
            ${item.description ? `<p class="description">${item.description}</p>` : ''}
        `).join('');
    // Finish setup
    finishBtn.addEventListener('click', () => {
      if (restaurantId && menuItems.length > 0) {
        // Only redirect if at least one menu item is added
        finishBtn.classList.add('loading');
        finishBtn.textContent = 'Launching Dashboard...';
          window.location.href = '/dashboard.html';
        }, 2000);
      } else if (!restaurantId) {
        alert('⚠️ Please complete your restaurant profile (Step 1) first.');
      } else if (menuItems.length === 0) {
        alert('⚠️ Please add at least one menu item (Step 2) before finishing.');
        document.getElementById('step2').scrollIntoView({ behavior: 'smooth' });
    // Initialize progress on page load
    updateProgress();
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
<script>
const allowedPlans = ["basic", "pro", "enterprise"];
const plan = localStorage.getItem("buzz_plan");
if (!allowedPlans.includes(plan)) {
  alert("🚫 You must subscribe to access this feature.");
  window.location.href = "pricing.html";
}
  const plan = localStorage.getItem("userPlan");

  if (plan !== "pro" && plan !== "agency") {
    alert("⚠️ Your plan doesn't include Online Ordering. Upgrade to access.");
    window.location.href = "pricing.html";
  }
</script>
<!-- SEO Meta Tags -->
<meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
<meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
<meta name="author" content="Buzzaraunt AI" />
<!-- Open Graph / Facebook -->
<meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
<meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
<meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
<meta property="og:url" content="https://buzzaraunt.com" />
<meta property="og:type" content="website" />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
<meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
<meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
<!-- Favicon -->
<link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Order Online – Buzzaraunt</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
<link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-gray-50 text-gray-900">
  <div class="max-w-3xl mx-auto p-6">
    <h1 id="restaurantTitle" class="text-3xl font-bold text-yellow-600 mb-4">Loading...</h1>
    <!-- Menu Items -->
    <div id="menuItems" class="space-y-4 mb-8">
      <!-- Items will load here -->
    </div>
    <!-- Cart -->
    <div class="bg-white rounded shadow p-4">
      <h2 class="text-xl font-bold mb-2">🛒 Your Cart</h2>
      <ul id="cartList" class="text-sm space-y-1"></ul>
      <p id="totalPrice" class="font-semibold mt-2"></p>
      <button onclick="goToCheckout()" class="mt-4 bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded w-full">Checkout</button>
  </div>
  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const restaurantId = urlParams.get('rid');
    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
    if (!restaurantId) {
      alert('Missing restaurant ID.');
      window.location.href = '/';
    }
    const menuItemsEl = document.getElementById('menuItems');
    const cartListEl = document.getElementById('cartList');
    const totalPriceEl = document.getElementById('totalPrice');
    async function fetchMenu() {
      const res = await fetch('/api/menu/' + restaurantId);
      const result = await res.json();
      if (result.success) {
        document.getElementById('restaurantTitle').textContent = "🍽️ Order from " + (result.items[0]?.restaurant_name || 'This Restaurant');
        result.items.forEach(item => {
          const div = document.createElement('div');
          div.className = "bg-white p-4 shadow rounded flex justify-between items-center";
          div.innerHTML = \`
            <div>
              <h3 class="text-lg font-bold">\${item.item}</h3>
              <p class="text-sm text-gray-600">\${item.description}</p>
            </div>
            <div class="text-right">
              <p class="font-semibold mb-2">\${item.price}</p>
              <button class="bg-green-500 text-white px-3 py-1 rounded" onclick='addToCart(\${JSON.stringify(item)})'>Add</button>
          \`;
          menuItemsEl.appendChild(div);
        });
      } else {
        menuItemsEl.innerHTML = '<p>Failed to load menu.</p>';
      }
    function addToCart(item) {
      cart.push(item);
      localStorage.setItem('cart', JSON.stringify(cart));
      renderCart();
    function renderCart() {
      cartListEl.innerHTML = '';
      let total = 0;
      cart.forEach((item, i) => {
        const li = document.createElement('li');
        li.textContent = \`\${item.item} - \${item.price}\`;
        cartListEl.appendChild(li);
        const priceNum = parseFloat(item.price.replace('$', '')) || 0;
        total += priceNum;
      });
      totalPriceEl.textContent = "Total: $" + total.toFixed(2);
    function goToCheckout() {
      window.location.href = '/checkout.html?rid=' + restaurantId;
    renderCart();
    fetchMenu();
  </script>
const user = JSON.parse(localStorage.getItem("user"));
const allowedPlans = ["basic","pro","enterprise"];
if (!user || !allowedPlans.includes(user.plan)) {
alert("🚫 Access denied: Please subscribe to a plan.");
window.location.href = "pricing.html";
</body>
</html>
<!-- 🛒 Order Inputs -->
<div class="max-w-md mx-auto mt-6 bg-white p-4 rounded shadow">
  <input type="text" id="customerName" placeholder="Your Name" class="w-full border p-2 mb-2" />
  <input type="text" id="address" placeholder="Delivery Address" class="w-full border p-2 mb-2" />
  <div class="mb-2">
    <label><input type="radio" name="method" value="pickup" checked /> Pickup</label>
    <label class="ml-4"><input type="radio" name="method" value="delivery" /> Delivery</label>
  <button onclick="placeOrder()" class="bg-green-600 text-white px-4 py-2 rounded w-full">
    🍔 Place Order
  </button>
</div>
async function placeOrder() {
  const token = localStorage.getItem('token');
  if (!token) return alert("Please log in to place an order.");
  const cartItems = JSON.parse(localStorage.getItem('cart') || '[]');
  const total = cartItems.reduce((sum, item) => sum + (item.price * item.qty), 0).toFixed(2);
  const orderData = {
    cart: cartItems,
    total,
    customerName: document.getElementById('customerName').value,
    address: document.getElementById('address').value,
    method: document.querySelector('input[name=method]:checked').value,
  };
  const res = await fetch('process.env.REACT_APP_BACKEND_URL/api/orders', {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(orderData)
  });
  const data = await res.json();
  if (data.success) {
    alert("✅ Order placed!");
    localStorage.removeItem('cart');
    window.location.href = 'track.html?id=' + data.order.id;
  } else {
    alert("❌ Failed to place order: " + data.message);
<!DOCTYPE html>
<html lang="en">
<head>
<script>
const allowedPlans = ["basic", "pro", "enterprise"];
const plan = localStorage.getItem("buzz_plan");
if (!allowedPlans.includes(plan)) {
  alert("🚫 You must subscribe to access this feature.");
  window.location.href = "pricing.html";
}
  const plan = localStorage.getItem("userPlan");

  if (plan !== "agency") {
    alert("📍 Customer Tracking is only available to Agency plan users.");
    window.location.href = "pricing.html";
  }
</script>
<!-- SEO Meta Tags -->
<meta name="description" content="Buzzaraunt – The AI-powered restaurant marketing & online ordering platform" />
<meta name="keywords" content="restaurant marketing, AI menu, food delivery, online ordering, social media promos" />
<meta name="author" content="Buzzaraunt AI" />
<!-- Open Graph / Facebook -->
<meta property="og:title" content="Buzzaraunt – AI Marketing for Restaurants" />
<meta property="og:description" content="Create viral promos, schedule AI-powered posts, and manage online orders from one dashboard." />
<meta property="og:image" content="https://buzzaraunt.com/og-image.jpg" />
<meta property="og:url" content="https://buzzaraunt.com" />
<meta property="og:type" content="website" />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Buzzaraunt – AI for Restaurants" />
<meta name="twitter:description" content="Your full-service AI marketing and ordering solution." />
<meta name="twitter:image" content="https://buzzaraunt.com/twitter-preview.jpg" />
<!-- Favicon -->
<link rel="icon" type="image/png" href="favicon.png" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Track Your Order – Buzzaraunt</title>
  <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
<link rel="stylesheet" href="/src/styles/styles.css" />
</head>
<body class="bg-gray-50 text-gray-900">
  <div class="max-w-md mx-auto p-6">
    <h1 class="text-2xl font-bold text-yellow-600 mb-4">📦 Track Your Order</h1>
    <div id="statusBox" class="bg-white p-4 rounded shadow">
      <p class="text-sm text-gray-500 mb-1">Order ID: <span id="orderId"></span></p>
      <h2 class="text-xl font-bold mb-2" id="statusText">Loading...</h2>
      <p class="text-sm mb-1"><strong>Method:</strong> <span id="method"></span></p>
      <p class="text-sm mb-1"><strong>Driver:</strong> <span id="driverName">Not assigned</span></p>
      <p class="text-sm mb-1"><strong>Last updated:</strong> <span id="updatedAt"></span></p>
    </div>
    <p class="mt-4 text-center text-xs text-gray-500">This page auto-refreshes every 20 seconds.</p>
  </div>
  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const orderId = urlParams.get('oid');
    document.getElementById('orderId').textContent = orderId;
    async function fetchOrderStatus() {
      const res = await fetch('/api/orders/status?orderId=' + orderId);
      const data = await res.json();
      if (data.success) {
        document.getElementById('statusText').textContent = "🕒 Status: " + data.status.toUpperCase();
        document.getElementById('method').textContent = data.method;
        document.getElementById('driverName').textContent = data.driverName || 'Not assigned yet';
        document.getElementById('updatedAt').textContent = new Date(data.updatedAt).toLocaleTimeString();
      } else {
        document.getElementById('statusText').textContent = "Order not found.";
      }
    }
    fetchOrderStatus();
    setInterval(fetchOrderStatus, 20000);
  </script>
</body>
</html>
EOF
